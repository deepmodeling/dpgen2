import os
import shutil
import sys
import unittest
from unittest.mock import Mock

import numpy as np

from dflow.python import OPIO
from dpgen2.op import DiffCSPGen


class MockedTorchTensor:
    def __init__(self, array):
        self.array = array

    def numpy(self):
        return np.array(self.array)


class TestDiffCSPGen(unittest.TestCase):
    def testDiffCSPGen(self):
        mocked_torch = Mock()
        mocked_torch.load = lambda *args, **kwargs: {
            "num_atoms": [4],
            "lengths": MockedTorchTensor([[3.9783, 3.9739, 7.8712]]),
            "angles": MockedTorchTensor([[75.4395, 75.2368, 59.9560]]),
            "frac_coords": MockedTorchTensor([
                [0.9364, 0.8685, 0.3059],
                [0.6652, 0.5965, 0.1211],
                [0.3940, 0.3267, 0.9381],
                [0.1671, 0.0943, 0.6182]]),
            "atom_types": np.array([
                [3.3592e-04,  3.0107e-04,  3.9129e-04, -6.3763e-04,  8.0520e-04,
                 4.4414e-04, -2.8986e-04, -2.1392e-03,  4.8722e-05, -3.3231e-04,
                 -6.3191e-04,  5.9795e-04,  1.4732e-04, -3.7197e-04,  7.1938e-04,
                 -6.7943e-04,  3.8498e-04, -1.4324e-04, -2.6901e-04, -5.0780e-04,
                 -1.0818e-04, -3.5262e-04, -8.5311e-05, -5.2838e-04,  2.2596e-04,
                 -7.2861e-04,  9.3495e-05,  5.2268e-04, -1.3498e-03,  4.2470e-06,
                 5.4609e-04, -1.0146e-04,  1.2022e-04, -6.8679e-04,  1.2461e-04,
                 2.1435e-04, -7.1471e-04,  1.1662e-03, -6.6708e-04,  8.2295e-04,
                 6.2853e-04, -2.4491e-04,  6.4987e-04, -5.1100e-04, -5.1476e-04,
                 -7.7254e-04,  8.8924e-04,  1.1588e-03,  7.2993e-04, -1.0635e-03,
                 1.1115e-03,  3.4901e-04, -2.2457e-04,  1.4041e-04,  5.2349e-04,
                 -7.5847e-05,  1.0064e+00, -1.3512e-04, -5.7845e-05, -5.7440e-04,
                 -3.5642e-04, -1.0602e-03, -7.2654e-04, -3.3495e-04,  4.6810e-04,
                 2.2099e-04,  1.2765e-03, -3.9296e-04,  2.3515e-04, -9.7137e-04,
                 -2.0593e-04,  1.8036e-05,  1.9761e-04, -6.6997e-04, -2.3799e-04,
                 -1.0367e-03, -7.8580e-04,  1.6282e-04, -2.2094e-05, -6.1782e-04,
                 -8.0335e-04, -6.1013e-05,  5.1792e-04,  8.8457e-04, -1.4201e-04,
                 8.3348e-05, -8.7103e-04, -3.7644e-04, -7.9451e-04,  2.1580e-04,
                 2.4297e-04, -6.2706e-04,  2.1187e-04,  2.1576e-04, -7.6110e-04,
                 -6.6156e-04, -1.6728e-04,  7.9632e-04, -2.4411e-04,  8.1214e-05],
                [-7.0909e-04, -4.9160e-05,  6.4183e-04, -2.3159e-05, -2.1111e-04,
                 9.9265e-01, -2.5487e-04,  2.0234e-03,  3.7245e-04, -2.1519e-04,
                 -1.2896e-03,  6.5524e-04,  5.8468e-04,  6.9007e-04, -6.8366e-04,
                 -1.5442e-03,  1.1736e-03, -2.7028e-04, -8.7887e-04, -6.9466e-04,
                 -4.2686e-04, -1.3817e-03, -5.9043e-04,  2.4127e-05, -5.0269e-04,
                 8.5697e-04,  8.0366e-05, -2.3199e-04,  1.0801e-03, -5.6569e-04,
                 1.3053e-03, -4.3600e-04,  2.7265e-04, -1.4574e-03,  4.8319e-04,
                 1.1370e-04, -1.9870e-05,  2.5677e-04, -2.1308e-04,  4.2040e-04,
                 -1.7702e-03,  3.6868e-04, -6.4718e-05, -1.2740e-03,  5.9798e-05,
                 5.6298e-04,  1.5739e-04, -1.2427e-03, -2.3625e-04,  1.2725e-03,
                 2.7244e-03,  2.2982e-04, -5.3311e-04,  3.9148e-04,  6.8299e-05,
                 1.0015e-03, -9.0848e-04, -5.1714e-04, -1.0943e-03,  2.5606e-05,
                 2.8485e-04, -1.1111e-03, -1.0351e-04,  3.5585e-04,  5.3167e-04,
                 -1.8233e-04, -7.3155e-04,  4.4785e-04,  1.0446e-03,  1.3169e-04,
                 -6.6539e-04, -5.3372e-04,  3.3434e-04, -5.2778e-04,  4.0154e-04,
                 1.0038e-03,  8.9614e-04,  8.2089e-04, -9.7924e-04, -2.7403e-04,
                 2.7191e-04, -8.9014e-04,  1.0588e-03, -1.1651e-03, -8.0853e-04,
                 9.6170e-05, -4.3855e-04,  2.9800e-04, -6.9158e-05, -5.0128e-04,
                 1.6640e-03,  1.6139e-03, -2.5935e-04, -6.6282e-04,  3.5163e-05,
                 1.8553e-04, -6.3214e-04,  1.1661e-03, -3.2857e-04, -3.5929e-04],
                [3.4069e-04, -2.0518e-04,  5.5739e-04,  7.0733e-06,  9.7434e-04,
                 2.2107e-04, -2.1307e-04, -1.1901e-03, -1.0868e-04, -4.3491e-04,
                 -4.6747e-04,  8.8033e-04, -5.3345e-04, -4.5509e-04,  3.9525e-04,
                 3.9781e-05, -4.7723e-04, -4.7385e-04, -2.4597e-04, -1.0039e-03,
                 1.0478e-04,  1.1463e-03, -4.7850e-04, -3.1328e-05, -3.7674e-06,
                 -4.1706e-04, -1.5533e-05,  8.7933e-04, -4.6539e-04, -2.1604e-04,
                 -2.5042e-04, -1.0196e-04, -1.2501e-04, -3.7640e-04,  2.4961e-04,
                 -1.6852e-05, -4.4518e-04,  9.3337e-04, -6.9345e-04,  4.2971e-04,
                 -1.8360e-04, -2.1426e-04,  6.1983e-04, -6.2752e-05,  7.9834e-04,
                 1.9826e-04,  2.5389e-04,  6.1837e-04, -1.4870e-04, -3.5978e-04,
                 8.5050e-04,  5.4130e-04,  5.9721e-04, -3.9270e-04,  3.0747e-04,
                 -3.9029e-04,  1.0000e+00, -6.1231e-05,  1.9509e-04, -9.3342e-04,
                 -9.5543e-05,  1.6481e-04, -3.4956e-04,  1.8306e-04,  1.6214e-04,
                 6.7432e-04,  3.2698e-04,  4.6957e-04,  6.6374e-04,  2.4401e-04,
                 -2.8953e-04,  4.5274e-04,  7.7035e-04, -1.3329e-04,  2.1814e-04,
                 -4.4580e-04, -1.6980e-04,  4.3275e-05,  4.4877e-04, -3.5606e-04,
                 3.7028e-05, -3.2027e-06, -5.4841e-04,  3.4593e-04, -6.1065e-05,
                 1.6113e-04, -4.5586e-04, -9.2710e-05,  7.3830e-05, -8.2601e-05,
                 3.6123e-05, -6.0147e-04,  6.8068e-04,  5.1152e-04, -1.6020e-04,
                 -4.6825e-04, -4.4536e-04, -1.2684e-04,  3.4957e-05, -3.4964e-04],
                [6.9942e-04, -2.3009e-04,  3.9129e-04, -4.5735e-05, -1.5210e-04,
                 -9.5870e-05,  3.2569e-04, -1.1394e-03,  7.7203e-04,  1.9814e-04,
                 1.1035e-04,  7.0963e-04, -2.9960e-04, -3.1560e-04,  6.6132e-04,
                 2.2888e-04,  5.6245e-04, -5.1699e-05,  3.0806e-04,  7.6312e-04,
                 3.6271e-04,  5.5544e-04, -5.3967e-04, -1.0092e-04,  1.7226e-04,
                 2.1784e-04, -1.9432e-04,  9.4856e-04,  5.7033e-04,  6.6431e-05,
                 3.8977e-05, -9.3216e-04, -1.3489e-04, -3.3908e-04,  9.9789e-01,
                 5.3704e-04, -7.5510e-05, -5.2399e-04,  7.2395e-04, -7.5516e-04,
                 -2.5590e-04,  2.5873e-04,  7.3807e-04,  2.2888e-07, -1.4879e-04,
                 5.1340e-04, -1.3458e-04, -3.0084e-04,  2.7856e-04, -2.3874e-04,
                 3.5563e-04,  7.3932e-04, -7.4016e-05, -3.3168e-04, -6.0069e-05,
                 5.1038e-04, -8.4479e-05,  2.1435e-04,  1.1598e-04,  6.8415e-05,
                 2.7146e-05, -2.2083e-04, -5.2108e-04, -3.8993e-04, -9.7699e-04,
                 5.9252e-04, -1.6931e-04, -9.4700e-04, -2.9051e-04, -5.3630e-04,
                 -4.2456e-04, -3.9352e-05, -1.3817e-04, -2.2283e-04,  3.3220e-05,
                 2.5155e-04, -7.0318e-07,  4.8145e-04,  3.5942e-04,  5.4292e-04,
                 -1.6069e-04,  1.8675e-04,  1.6393e-04,  5.2633e-05, -5.0289e-05,
                 -1.9838e-04,  1.0472e-04, -2.1608e-05, -5.2919e-05, -1.9588e-04,
                 -2.3803e-05,  1.1158e-05, -6.2318e-06,  7.9619e-05, -3.4735e-06,
                 -1.6122e-05, -3.8437e-04, -5.6557e-04,  5.6475e-05,  3.4945e-04]]),
        }
        sys.modules["torch"] = mocked_torch
        config = {
            "gen_command": "echo 'mocked generation' --model_path ."
        }
        op = DiffCSPGen()
        op_in = OPIO({"config": config, "task_id": "000000"})
        op_out = op.execute(op_in)

        cifs = op_out["cifs"]
        self.assertEqual(len(cifs), 1)
        self.assertEqual(str(cifs[0]), "diffcsp.000000/0.cif")
        self.assertTrue(cifs[0].read_text().startswith("# generated using pymatgen"))

    def tearDown(self):
        if os.path.isdir("diffcsp.000000"):
            shutil.rmtree("diffcsp.000000")
