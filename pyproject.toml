[build-system]
requires = ["setuptools>=61", "setuptools_scm[toml]>=7"]
build-backend = "setuptools.build_meta"

[project]
name = "dpgen2"
dynamic = ["version"]
description = "DPGEN2: concurrent learning workflow generating the machine learning potential energy models."
authors = [
  {name = "DeepModeling"},
]
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python :: 3.7",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
]
dependencies = [
	     'numpy',
	     'dpdata>=0.2.20',
	     'pydflow>=1.8.88',
	     'dargs>=0.3.1',
	     'scipy',
	     'lbg',
	     'packaging',
	     'fpop',
	     'dpgui',
             'cp2kdata',
]
requires-python = ">=3.7"
readme = "README.md"
keywords = ["deep potential", "concurrent learning", "work flow"]

[project.urls]
Homepage = "https://github.com/deepmodeling/dpgen2"
documentation = "https://docs.deepmodeling.com/projects/dpgen2"
repository = "https://github.com/deepmodeling/dpgen2"

[project.scripts]
dpgen2 = "dpgen2.entrypoint.main:main"

[project.entry-points."dpgui"]
"DP-GEN2 Submit" = "dpgen2.entrypoint.args:submit_args"

[project.optional-dependencies]
docs = [
     'sphinx',
     'recommonmark',
     'sphinx_rtd_theme>=1.0.0rc1',
     'numpydoc',
     'myst_parser',
     'deepmodeling_sphinx',
     'sphinx-argparse<0.5.0',
     "dargs>=0.4.1",
]
test = [
     'fakegaussian>=0.0.3',
    'dpgui',
]
gui = [
    'dpgui',
]

[tool.setuptools.packages.find]
include = ["dpgen2*"]

[tool.setuptools.package-data]
dpgen2 = ['*.json']

[tool.setuptools_scm]
write_to = "dpgen2/_version.py"

[tool.pyright]
include = [
     "dpgen2",
]
exclude = [
    "dpgen2/_version.py",
]

[tool.isort]
profile = "black"
force_grid_wrap = 1

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "E", # errors
    "W", # warning
    "F", # pyflakes
    "D", # pydocstyle
    "UP", # pyupgrade
    "C4", # flake8-comprehensions
    "RUF", # ruff
    "NPY", # numpy
    "TID251", # banned-api
    "TID253", # banned-module-level-imports
    "T20", # ban print
    "B904", # raise-without-from-inside-except
    "N804", # invalid-first-argument-name-for-class-method
    "N805", # invalid-first-argument-name-for-method
    "DTZ", # datetime
]

ignore = [
    "E501", # line too long
    "F841", # local variable is assigned to but never used
    "E741", # ambiguous variable name
    "E402", # module level import not at top of file
    "D100", # TODO: missing docstring in public module
    "D101", # TODO: missing docstring in public class
    "D102", # TODO: missing docstring in public method
    "D103", # TODO: missing docstring in public function
    "D104", # TODO: missing docstring in public package
    "D105", # TODO: missing docstring in magic method
    "D205", # 1 blank line required between summary line and description
    "D401", # TODO: first line should be in imperative mood
    "D404", # TODO: first word of the docstring should not be This
]
exclude = [
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"
